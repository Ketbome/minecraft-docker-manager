services:
  mc:
    image: itzg/minecraft-server:java17
    tty: true
    stdin_open: true
    ports:
      - "25566:25565"
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: 6G
        reservations:
          cpus: "0.3"
          memory: 4G
    environment:
      EULA: "true"

      # VANILLA settings
      #TYPE: VANILLA
      #VERSION: "1.16.5"

      # FORGE settings
      #TYPE: FORGE
      #VERSION: "1.16.5"

      # CURSEFORGE settings
      #TYPE: CURSEFORGE
      #VERSION: "1.16.5"
      #CF_SERVER_MOD: "/modpacks/serverpack9112.zip"

      # CURSEFORGE settings (alternative to CF_SERVER_MOD)
      # Allocate from https://console.curseforge.com/ and set in .env file
      TYPE: "AUTO_CURSEFORGE"
      CF_API_KEY: ${CF_API_KEY}
      CF_PAGE_URL: "https://www.curseforge.com/minecraft/modpacks/vault-hunters-1-18-2"
      #CF_FORCE_INCLUDE_MODS: "890745"
      #CF_EXCLUDE_MODS: '965556'
      #CF_FILENAME_MATCHER: "0.2.34"
      CF_FORCE_SYNCHRONIZE: "true"
      #CF_FORCE_INCLUDE_MODS: 250419

      # Optional: set to the version you want to install
      INIT_MEMORY: "4G"
      MAX_MEMORY: "6G"
      TZ: "America/Santiago"
      ENABLE_ROLLING_LOGS: "true"
      EXEC_DIRECTLY: "true"
      STOP_SERVER_ANNOUNCE_DELAY: 60

      #Server settings
      MOTD: "TulaCraft"
      OPS: "ketbome"
      DIFFICULTY: "hard"
      MAX_PLAYERS: "10"
      ENABLE_COMMAND_BLOCK: "true"
      VIEW_DISTANCE: "6"
      SIMULATION_DISTANCE: "4"
      PVP: "true"
      ALLOW_FLIGHT: "true"
      PLAYER_IDLE_TIMEOUT: "60"
      ONLINE_MODE: "false"

    volumes:
      - ./mc-data:/data
      # For forge or curseforge, you need to provide the mods and modpacks directories
      #- ./mods:/mods:ro
      # For curseforge, you need to provide the modpacks directory
      - ./modpacks:/modpacks:ro
    restart: "no"

  # Since Docker's default volume driver creates volumes owned by root, this
  # init container will change ownership to match final UID of mc service, above
  init-filebrowser:
    image: filebrowser/filebrowser
    entrypoint: "sh -c"
    command:
      - "chown -R 1000: /database"
    restart: "no"
    volumes:
      - ./filebrowser-db:/database
  filebrowser:
    image: filebrowser/filebrowser
    depends_on:
      init-filebrowser:
        condition: service_completed_successfully
    user: "1000:1000"
    environment:
      FB_DATABASE: /database/filebrowser.db
    volumes:
      # Default FB_ROOT is /srv
      # In this example, the left-side needs to be the same as /data volume of mc service
      - ./mc-data:/srv
      - ./filebrowser-db:/database
    ports:
      - "25581:80"
    restart: "no"

volumes:
  mc-data: {}
  filebrowser-db: {}
